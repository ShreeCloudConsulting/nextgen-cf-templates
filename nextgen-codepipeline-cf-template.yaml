AWSTemplateFormatVersion: "2010-09-09"
Description: "This cloudformation template is to create codepipeline for both learning and gateway services"

Resources:
    BuildArtifactsBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketEncryption:
            ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: AES256

    ServiceRole:
        Type: AWS::IAM::Role
        Properties:
          Policies:
            - PolicyName: CodeBuildRequirements
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action:
                    - codecommit:GitPull
                    Effect: Allow
                    Resource:
                      - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:*'
                  - Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                    Effect: Allow
                    Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
            - PolicyName: CodePipelineCodeAndArtifactsS3BucketAccess
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action: "s3:*"
                    Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"                     
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service: codebuild.amazonaws.com
                Action: sts:AssumeRole

    CodeBuildProject2:
        Type: "AWS::CodeBuild::Project"
        Properties:
            Name: "learning-build"
            Source: 
                InsecureSsl: false
                Type: "CODEPIPELINE"
            Artifacts: 
                EncryptionDisabled: false
                Name: "learning-build"
                Packaging: "NONE"
                Type: "CODEPIPELINE"
            Cache: 
                Type: "NO_CACHE"
            Environment: 
                ComputeType: "BUILD_GENERAL1_SMALL"
                Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
                ImagePullCredentialsType: "CODEBUILD"
                PrivilegedMode: true
                Type: "LINUX_CONTAINER"
            ServiceRole: !GetAtt ServiceRole.Arn
            TimeoutInMinutes: 60
            QueuedTimeoutInMinutes: 480
            EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
            BadgeEnabled: false
            LogsConfig: 
                CloudWatchLogs: 
                    Status: "ENABLED"
                S3Logs: 
                    Status: "DISABLED"
                    EncryptionDisabled: false
            Visibility: "PRIVATE"

    CodeBuildProject3:
        Type: "AWS::CodeBuild::Project"
        Properties:
            Name: "gateway-build"
            Source: 
                InsecureSsl: false
                Type: "CODEPIPELINE"
            Artifacts: 
                EncryptionDisabled: false
                Name: "gateway-build"
                Packaging: "NONE"
                Type: "CODEPIPELINE"
            Cache: 
                Type: "NO_CACHE"
            Environment: 
                ComputeType: "BUILD_GENERAL1_SMALL"
                EnvironmentVariables: 
                  - 
                    Name: "AWS_ACCOUNT_ID"
                    Type: "PLAINTEXT"
                    Value: !Ref AWS::AccountId
                  - 
                    Name: "AWS_DEFAULT_REGION"
                    Type: "PLAINTEXT"
                    Value: !Ref AWS::Region
                  - 
                    Name: "IMAGE_REPO_NAME"
                    Type: "PLAINTEXT"
                    Value: "gateway"
                Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
                ImagePullCredentialsType: "CODEBUILD"
                PrivilegedMode: true
                Type: "LINUX_CONTAINER"
            ServiceRole: !GetAtt ServiceRole.Arn
            TimeoutInMinutes: 60
            QueuedTimeoutInMinutes: 480
            EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
            BadgeEnabled: false
            LogsConfig: 
                CloudWatchLogs: 
                    Status: "ENABLED"
                S3Logs: 
                    Status: "DISABLED"
                    EncryptionDisabled: false
            Visibility: "PRIVATE"

    CodePipelineExecutionRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "sts:AssumeRole"
                Effect: Allow
                Principal:
                  Service:
                    - codepipeline.amazonaws.com
          Path: /
          Policies:
            - PolicyName: CodePipelineAccess
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action:
                      - "iam:PassRole"
                      - "lambda:InvokeFunction"
                      - "lambda:ListFunctions"
                      - "lambda:InvokeAsyc"
                      - "sts:AssumeRole"
                    Resource: "*"
            - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action: "s3:*"
                    Resource: !Sub "arn:aws:s3:::${BuildArtifactsBucket}/*"
            - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: Allow
                    Action:
                      - "codebuild:StartBuild"
                      - "codebuild:BatchGetBuilds"
                    Resource:
                      - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject2}"
                      - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject3}"

    CodePipelinePipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: "gateway-pipeline"
            RoleArn: !GetAtt CodePipelineExecutionRole.Arn
            ArtifactStore: 
                Location: !Ref BuildArtifactsBucket
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeStarSourceConnection"
                        Version: "1"
                    Configuration: 
                        BranchName: "dev"
                        ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/da30f20a-9bda-4354-9af3-31c73fb59658"
                        FullRepositoryId: "XXXXXXXXXXXXXXXXXXXXXXXX"
                        OutputArtifactFormat: "CODE_ZIP"
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Build"
                Actions: 
                  - 
                    Name: "Build"
                    ActionTypeId: 
                        Category: "Build"
                        Owner: "AWS"
                        Provider: "CodeBuild"
                        Version: "1"
                    Configuration: 
                        ProjectName: !Ref CodeBuildProject3
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    OutputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "BuildVariables"
                    RunOrder: 1
              - 
                Name: "Deploy"
                Actions: 
                  - 
                    Name: "Deploy"
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "ECS"
                        Version: "1"
                    Configuration: 
                        ClusterName: "staging-nextgen"
                        ServiceName: "staging-gateway"
                    InputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "DeployVariables"
                    RunOrder: 1

    CodePipelinePipeline2:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: "learning-pipeline"
            RoleArn: !GetAtt CodePipelineExecutionRole.Arn
            ArtifactStore: 
                Location: !Ref BuildArtifactsBucket
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeStarSourceConnection"
                        Version: "1"
                    Configuration: 
                        BranchName: "stage"
                        ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/da30f20a-9bda-4354-9af3-31c73fb59658"
                        FullRepositoryId: !Sub "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
                        OutputArtifactFormat: "CODE_ZIP"
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Build"
                Actions: 
                  - 
                    Name: "Build"
                    ActionTypeId: 
                        Category: "Build"
                        Owner: "AWS"
                        Provider: "CodeBuild"
                        Version: "1"
                    Configuration: 
                        ProjectName: !Ref CodeBuildProject2
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    OutputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "BuildVariables"
                    RunOrder: 1
              - 
                Name: "Deploy"
                Actions: 
                  - 
                    Name: "Deploy"
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "ECS"
                        Version: "1"
                    Configuration: 
                        ClusterName: "staging-nextgen"
                        ServiceName: "staging-learning"
                    InputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "DeployVariables"
                    RunOrder: 1

